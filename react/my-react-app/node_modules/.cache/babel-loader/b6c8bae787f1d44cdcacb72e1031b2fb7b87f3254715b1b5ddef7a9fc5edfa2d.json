{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rashmi.ts\\\\my-react-app\\\\src\\\\Components\\\\Todo.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useReducer } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...state, {\n        ...action.data,\n        complete: false\n      }];\n    case \"DELETE\":\n      return [...state, {\n        ...action.data,\n        complete: true\n      }];\n    default:\n      return state;\n  }\n};\nconst Todo = () => {\n  _s();\n  const [input, setInput] = useState({});\n  const [state, dispatch] = useReducer(reducer, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: JSON.stringify(state)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        setInput({\n          ...input,\n          id: e.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        setInput({\n          ...input,\n          title: e.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"ADD\",\n        data: input\n      }),\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"DELETE\",\n        data: input\n      }),\n      children: \"DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"EDIT\",\n        data: input\n      }),\n      children: \"EDIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"yUnp1bdHc7LSQPRDaIiF5y9NOzs=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useReducer","useState","jsxDEV","_jsxDEV","reducer","state","action","type","data","complete","Todo","_s","input","setInput","dispatch","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","id","target","value","title","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rashmi.ts/my-react-app/src/Components/Todo.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useReducer } from \"react\";\r\nimport { useState } from \"react\";\r\nconst reducer = (state, action) => {\r\n  switch(action.type){\r\n    case\"ADD\":\r\n    return [...state,{...action.data,complete:false}]\r\n    case\"DELETE\":\r\n    return [...state,{...action.data,complete:true}]\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst Todo = () => {\r\n  const[input, setInput] = useState({})\r\n  const [state, dispatch] = useReducer(reducer,[])\r\nreturn (\r\n    <div>\r\n      <h1>{JSON.stringify(state)}</h1>\r\n      <input type=\"text\" onChange={(e)=>{setInput({...input,id:e.target.value})}}/>\r\n      <input type=\"text\" onChange={(e)=>{setInput({...input,title:e.target.value})}}/>\r\n      <button onClick={()=> dispatch({type:\"ADD\",data:input})}>ADD</button>\r\n      <button onClick={()=> dispatch({type:\"DELETE\",data:input})}>DELETE</button>\r\n      <button onClick={()=> dispatch({type:\"EDIT\",data:input})}>EDIT</button>\r\n      \r\n    </div>\r\n    \r\n    \r\n  )\r\n}\r\n\r\nexport default Todo     "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAI,KAAK;MACT,OAAO,CAAC,GAAGF,KAAK,EAAC;QAAC,GAAGC,MAAM,CAACE,IAAI;QAACC,QAAQ,EAAC;MAAK,CAAC,CAAC;IACjD,KAAI,QAAQ;MACZ,OAAO,CAAC,GAAGJ,KAAK,EAAC;QAAC,GAAGC,MAAM,CAACE,IAAI;QAACC,QAAQ,EAAC;MAAI,CAAC,CAAC;IAChD;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AACD,MAAMK,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACrC,MAAM,CAACI,KAAK,EAAES,QAAQ,CAAC,GAAGd,UAAU,CAACI,OAAO,EAAC,EAAE,CAAC;EAClD,oBACID,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAKC,IAAI,CAACC,SAAS,CAACZ,KAAK;IAAC;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChClB,OAAA;MAAOI,IAAI,EAAC,MAAM;MAACe,QAAQ,EAAGC,CAAC,IAAG;QAACV,QAAQ,CAAC;UAAC,GAAGD,KAAK;UAACY,EAAE,EAACD,CAAC,CAACE,MAAM,CAACC;QAAK,CAAC,CAAC;MAAA;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC7ElB,OAAA;MAAOI,IAAI,EAAC,MAAM;MAACe,QAAQ,EAAGC,CAAC,IAAG;QAACV,QAAQ,CAAC;UAAC,GAAGD,KAAK;UAACe,KAAK,EAACJ,CAAC,CAACE,MAAM,CAACC;QAAK,CAAC,CAAC;MAAA;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChFlB,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAKd,QAAQ,CAAC;QAACP,IAAI,EAAC,KAAK;QAACC,IAAI,EAACI;MAAK,CAAC,CAAE;MAAAG,QAAA,EAAC;IAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrElB,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAKd,QAAQ,CAAC;QAACP,IAAI,EAAC,QAAQ;QAACC,IAAI,EAACI;MAAK,CAAC,CAAE;MAAAG,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3ElB,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAKd,QAAQ,CAAC;QAACP,IAAI,EAAC,MAAM;QAACC,IAAI,EAACI;MAAK,CAAC,CAAE;MAAAG,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpE,CAAC;AAIV,CAAC;AAAAV,EAAA,CAhBKD,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AAkBV,eAAeA,IAAI;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
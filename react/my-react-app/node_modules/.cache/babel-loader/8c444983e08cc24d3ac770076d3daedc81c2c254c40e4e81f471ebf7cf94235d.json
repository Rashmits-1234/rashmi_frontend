{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rashmi.ts\\\\my-react-app\\\\src\\\\Components\\\\Todo.jsx\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialTodos = [{\n  id: 1,\n  title: \"Todo 1\",\n  complete: false\n}, {\n  id: 2,\n  title: \"Todo 2\",\n  complete: false\n}];\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"COMPLETE\":\n      return state.map(todo => {\n        if (todo.id === action.id) {\n          return {\n            ...todo,\n            complete: !todo.complete\n          };\n        } else {\n          return todo;\n        }\n      });\n    default:\n      return state;\n  }\n};\nfunction Todos() {\n  _s();\n  const [todos, dispatch] = useReducer(reducer, initialTodos);\n  const handleComplete = todo => {\n    dispatch({\n      type: \"COMPLETE\",\n      id: todo.id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.complete,\n          onChange: () => handleComplete(todo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), todo.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(Todos, \"u4TrVHogQ4fo59FxNWf+bVaAFRg=\");\n_c = Todos;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(Todos, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 58,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["useReducer","ReactDOM","jsxDEV","_jsxDEV","Fragment","_Fragment","initialTodos","id","title","complete","reducer","state","action","type","map","todo","Todos","_s","todos","dispatch","handleComplete","children","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["C:/Users/rashmi.ts/my-react-app/src/Components/Todo.jsx"],"sourcesContent":["import { useReducer } from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\n\r\nconst initialTodos = [\r\n  {\r\n    id: 1,\r\n    title: \"Todo 1\",\r\n    complete: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Todo 2\",\r\n    complete: false,\r\n  },\r\n];\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"COMPLETE\":\r\n      return state.map((todo) => {\r\n        if (todo.id === action.id) {\r\n          return { ...todo, complete: !todo.complete };\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction Todos() {\r\n  const [todos, dispatch] = useReducer(reducer, initialTodos);\r\n\r\n  const handleComplete = (todo) => {\r\n    dispatch({ type: \"COMPLETE\", id: todo.id });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {todos.map((todo) => (\r\n        <div key={todo.id}>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={todo.complete}\r\n              onChange={() => handleComplete(todo)}\r\n            />\r\n            {todo.title}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<Todos />);"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAOF,KAAK,CAACG,GAAG,CAAEC,IAAI,IAAK;QACzB,IAAIA,IAAI,CAACR,EAAE,KAAKK,MAAM,CAACL,EAAE,EAAE;UACzB,OAAO;YAAE,GAAGQ,IAAI;YAAEN,QAAQ,EAAE,CAACM,IAAI,CAACN;UAAS,CAAC;QAC9C,CAAC,MAAM;UACL,OAAOM,IAAI;QACb;MACF,CAAC,CAAC;IACJ;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,SAASK,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,UAAU,CAACU,OAAO,EAAEJ,YAAY,CAAC;EAE3D,MAAMc,cAAc,GAAIL,IAAI,IAAK;IAC/BI,QAAQ,CAAC;MAAEN,IAAI,EAAE,UAAU;MAAEN,EAAE,EAAEQ,IAAI,CAACR;IAAG,CAAC,CAAC;EAC7C,CAAC;EAED,oBACEJ,OAAA,CAAAE,SAAA;IAAAgB,QAAA,EACGH,KAAK,CAACJ,GAAG,CAAEC,IAAI,iBACdZ,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UACEU,IAAI,EAAC,UAAU;UACfS,OAAO,EAAEP,IAAI,CAACN,QAAS;UACvBc,QAAQ,EAAEA,CAAA,KAAMH,cAAc,CAACL,IAAI;QAAE;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,EACDZ,IAAI,CAACP,KAAK;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC,GARAZ,IAAI,CAACR,EAAE;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASZ,CACN;EAAC,gBACF,CAAC;AAEP;AAACV,EAAA,CAvBQD,KAAK;AAAAY,EAAA,GAALZ,KAAK;AAyBd,MAAMa,IAAI,GAAG5B,QAAQ,CAAC6B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eAAC9B,OAAA,CAACa,KAAK;EAAAQ,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAC,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}